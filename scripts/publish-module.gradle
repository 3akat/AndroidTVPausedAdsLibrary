apply plugin: 'maven-publish'
apply plugin: 'signing'

if (android.productFlavors.size() > 0) {
    android.libraryVariants.all { variant ->
        if (variant.name.toLowerCase().contains("debug")) {
            return
        }

        def bundleTask = tasks["bundle${variant.name.capitalize()}Aar"]

        artifacts {
            archives(bundleTask.archivePath) {
                classifier variant.flavorName
                builtBy bundleTask
                name = project.name
            }
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                from components.release

//                artifact androidJavadocJar
//                artifact javaSourcesJar

                groupId = 'com.ziggeo'
                artifactId = 'com-ziggeo-androidtvlibrary'
                version = '1.0.3.2'
                pom {
                    packaging 'aar'

                    name = "AndroidTVPausedAdsLibrary"
                    description = 'AndroidTVPausedAdsLibrary'
                    url = 'https://github.com/3akat/AndroidTVPausedAdsLibrary'
                    licenses {
                        license {
                            name = 'Stream License'
                            url = ''
                        }
                    }
                    developers {
                        developer {
                            id = 'alexander.bedulin'
                            name = 'Alexander Bedulin'
                            email = 'alexb@ziggeo.com'
                        }
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = 'scm:git://github.com/3akat/AndroidTVPausedAdsLibrary.git'
                        developerConnection = 'scm:git://github.com/3akat/AndroidTVPausedAdsLibrary.git'
                        url = 'git://github.com/3akat/AndroidTVPausedAdsLibrary.git'
                    }
                }
            }
        }
        repositories {
            maven {
                name = "SonatypeSnapshot"

//                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }

            maven {
                name = "sonatype"

//                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
//                def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
//                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            rootProject.ext["signing.keyId"],
            rootProject.ext["signing.key"],
            rootProject.ext["signing.password"],
    )
    sign publishing.publications
}